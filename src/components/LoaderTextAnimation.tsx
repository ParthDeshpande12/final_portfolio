import { useState, useRef } from "react";

// Exact SVG paths and transitions from loading-screen
const signaturePaths = [
  // S
  {
    d: "M 22.796875 -7.109375 C 23.359375 -6.367188 23.785156 -5.535156 24.078125 -4.609375 C 24.367188 -3.691406 24.539062 -2.773438 24.59375 -1.859375 C 24.613281 -1.359375 24.613281 -0.863281 24.59375 -0.375 C 24.539062 0.300781 24.457031 0.984375 24.34375 1.671875 C 24.226562 2.359375 24.066406 3.03125 23.859375 3.6875 C 23.503906 4.851562 23.03125 5.972656 22.4375 7.046875 C 21.84375 8.117188 21.140625 9.113281 20.328125 10.03125 C 19.597656 10.894531 18.796875 11.695312 17.921875 12.4375 C 17.046875 13.1875 16.140625 13.878906 15.203125 14.515625 C 14.847656 14.765625 14.484375 15.003906 14.109375 15.234375 C 13.742188 15.460938 13.375 15.691406 13 15.921875 C 11.226562 17.015625 9.378906 17.5625 7.453125 17.5625 C 7.453125 17.5625 7.394531 17.550781 7.28125 17.53125 C 7.164062 17.519531 7.066406 17.515625 6.984375 17.515625 C 5.242188 17.460938 3.890625 16.894531 2.921875 15.8125 C 1.984375 14.769531 1.644531 13.460938 1.90625 11.890625 C 2.125 10.492188 2.625 9.320312 3.40625 8.375 C 4.195312 7.425781 5.0625 6.585938 6 5.859375 C 10.757812 2.023438 16.082031 -1.207031 21.96875 -3.84375 C 22.925781 -4.269531 23.40625 -4.785156 23.40625 -5.390625 C 23.40625 -6.003906 22.882812 -6.789062 21.84375 -7.75 C 20.582031 -8.894531 19.253906 -9.675781 17.859375 -10.09375 C 16.460938 -10.507812 15.046875 -10.816406 13.609375 -11.015625 C 13.117188 -11.097656 12.640625 -11.160156 12.171875 -11.203125 C 11.703125 -11.253906 11.226562 -11.304688 10.75 -11.359375 C 10.113281 -11.410156 9.472656 -11.472656 8.828125 -11.546875 C 8.179688 -11.628906 7.53125 -11.71875 6.875 -11.8125 C 5.914062 -11.988281 5.269531 -12.359375 4.9375 -12.921875 C 4.582031 -13.523438 4.660156 -14.207031 5.171875 -14.96875 C 5.453125 -15.375 5.789062 -15.726562 6.1875 -16.03125 C 13.207031 -21.550781 20.441406 -25.554688 27.890625 -28.046875 C 29.253906 -28.503906 30.519531 -28.734375 31.6875 -28.734375 L 32 -28.734375 C 33.394531 -28.703125 34.421875 -28.304688 35.078125 -27.546875 C 35.679688 -26.890625 35.910156 -26.039062 35.765625 -25 C 35.535156 -23.476562 35.109375 -22.097656 34.484375 -20.859375 C 33.859375 -19.617188 33.144531 -18.507812 32.34375 -17.53125 C 31.550781 -16.5625 30.773438 -15.695312 30.015625 -14.9375 C 29.835938 -14.757812 29.710938 -14.671875 29.640625 -14.671875 C 29.566406 -14.671875 29.488281 -14.707031 29.40625 -14.78125 C 29.207031 -14.957031 29.125 -15.109375 29.15625 -15.234375 C 29.195312 -15.359375 29.269531 -15.507812 29.375 -15.6875 L 30.59375 -17.5625 C 31 -18.1875 31.410156 -18.8125 31.828125 -19.4375 C 32.242188 -20.0625 32.640625 -20.6875 33.015625 -21.3125 C 33.347656 -21.84375 33.675781 -22.441406 34 -23.109375 C 34.332031 -23.785156 34.550781 -24.546875 34.65625 -25.390625 C 34.757812 -26.171875 34.644531 -26.765625 34.3125 -27.171875 C 33.957031 -27.578125 33.328125 -27.804688 32.421875 -27.859375 C 32.210938 -27.878906 31.992188 -27.890625 31.765625 -27.890625 C 30.722656 -27.890625 29.757812 -27.742188 28.875 -27.453125 C 27.988281 -27.160156 27.15625 -26.851562 26.375 -26.53125 C 21.9375 -24.601562 17.769531 -22.296875 13.875 -19.609375 C 13.164062 -19.128906 12.472656 -18.65625 11.796875 -18.1875 C 11.128906 -17.71875 10.488281 -17.242188 9.875 -16.765625 C 9.164062 -16.222656 8.535156 -15.6875 7.984375 -15.15625 C 7.878906 -15.0625 7.75 -14.945312 7.59375 -14.8125 C 7.46875 -14.71875 7.34375 -14.613281 7.21875 -14.5 C 7.09375 -14.382812 6.976562 -14.265625 6.875 -14.140625 C 6.75 -14.015625 6.65625 -13.882812 6.59375 -13.75 C 6.53125 -13.625 6.535156 -13.507812 6.609375 -13.40625 C 6.660156 -13.28125 6.757812 -13.191406 6.90625 -13.140625 C 7.0625 -13.097656 7.203125 -13.0625 7.328125 -13.03125 L 8.0625 -12.921875 C 8.4375 -12.867188 8.816406 -12.816406 9.203125 -12.765625 C 9.597656 -12.710938 10 -12.648438 10.40625 -12.578125 C 10.96875 -12.472656 11.554688 -12.367188 12.171875 -12.265625 C 12.796875 -12.171875 13.425781 -12.0625 14.0625 -11.9375 C 15.25 -11.65625 16.429688 -11.304688 17.609375 -10.890625 C 18.785156 -10.472656 19.867188 -9.882812 20.859375 -9.125 C 21.210938 -8.84375 21.5625 -8.53125 21.90625 -8.1875 C 22.25 -7.84375 22.546875 -7.484375 22.796875 -7.109375 Z",
    transform: "translate(44.751561, 48.558752)",
    transition:
      "stroke-dashoffset 1.5s ease-in-out 0s, opacity 0.3s ease-in-out 0s, visibility 0s ease-in-out 0s",
  },
  // u
  {
    d: "M 21.4375 -6.59375 C 22.078125 -5.953125 22.859375 -5.53125 23.6875 -5.53125 C 24.515625 -5.53125 25.296875 -5.953125 25.9375 -6.59375 C 26.578125 -7.234375 27 -8.015625 27 -8.84375 C 27 -9.671875 26.578125 -10.453125 25.9375 -11.09375 C 25.296875 -11.734375 24.515625 -12.15625 23.6875 -12.15625 C 22.859375 -12.15625 22.078125 -11.734375 21.4375 -11.09375 C 20.796875 -10.453125 20.375 -9.671875 20.375 -8.84375 C 20.375 -8.015625 20.796875 -7.234375 21.4375 -6.59375 Z",
    transform: "translate(73.511682, 48.558752)",
    transition:
      "stroke-dashoffset 1.2s ease-in-out 0.8s, opacity 0.3s ease-in-out 0.8s, visibility 0s ease-in-out 0.8s",
  },
  // m
  {
    d: "M 28.3125 -5.84375 C 29.078125 -5.078125 30.078125 -4.59375 31.3125 -4.59375 C 32.546875 -4.59375 33.546875 -5.078125 34.3125 -5.84375 C 35.078125 -6.609375 35.625 -7.578125 35.625 -8.84375 C 35.625 -10.109375 35.078125 -11.078125 34.3125 -11.84375 C 33.546875 -12.609375 32.546875 -13.09375 31.3125 -13.09375 C 30.078125 -13.09375 29.078125 -12.609375 28.3125 -11.84375 C 27.546875 -11.078125 27 -10.109375 27 -8.84375 C 27 -7.578125 27.546875 -6.609375 28.3125 -5.84375 Z",
    transform: "translate(93.989498, 48.558752)",
    transition:
      "stroke-dashoffset 1.3s ease-in-out 1.5s, opacity 0.3s ease-in-out 1.5s, visibility 0s ease-in-out 1.5s",
  },
  // a
  {
    d: "M 19.53125 -7.109375 C 20.582031 -6.894531 21.582031 -6.894531 22.640625 -7.109375 C 23.699219 -7.324219 24.707031 -7.707031 25.640625 -8.1875 C 26.574219 -8.667969 27.40625 -9.246094 28.078125 -9.859375 C 28.75 -10.472656 29.226562 -11.1875 29.515625 -12 C 29.804688 -12.8125 29.898438 -13.6875 29.898438 -14.625 C 29.898438 -15.5625 29.804688 -16.4375 29.515625 -17.25 C 29.226562 -18.0625 28.75 -18.777344 28.078125 -19.257812 C 27.40625 -19.738281 26.574219 -20.316406 25.640625 -20.796875 C 24.707031 -21.277344 23.699219 -21.660156 22.640625 -21.875 C 21.582031 -22.089844 20.582031 -22.089844 19.53125 -21.875 C 18.480469 -21.660156 17.472656 -21.277344 16.539062 -20.796875 C 15.605469 -20.316406 14.773438 -19.738281 14.09375 -19.257812 C 13.414062 -18.777344 12.9375 -18.0625 12.648438 -17.25 C 12.359375 -16.4375 12.265625 -15.5625 12.265625 -14.625 C 12.265625 -13.6875 12.359375 -12.8125 12.648438 -12 C 12.9375 -11.1875 13.414062 -10.472656 14.09375 -9.859375 C 14.773438 -9.246094 15.605469 -8.667969 16.539062 -8.1875 C 17.472656 -7.707031 18.480469 -7.324219 19.53125 -7.109375 Z",
    transform: "translate(121.419897, 48.558752)",
    transition:
      "stroke-dashoffset 1.2s ease-in-out 2.3s, opacity 0.3s ease-in-out 2.3s, visibility 0s ease-in-out 2.3s",
  },
  // n
  {
    d: "M 20.9375 -6.59375 C 21.578125 -5.953125 22.359375 -5.53125 23.1875 -5.53125 C 24.015625 -5.53125 24.796875 -5.953125 25.4375 -6.59375 C 26.078125 -7.234375 26.5 -8.015625 26.5 -8.84375 C 26.5 -9.671875 26.078125 -10.453125 25.4375 -11.09375 C 24.796875 -11.734375 24.015625 -12.15625 23.1875 -12.15625 C 22.359375 -12.15625 21.578125 -11.734375 20.9375 -11.09375 C 20.296875 -10.453125 19.875 -9.671875 19.875 -8.84375 C 19.875 -8.015625 20.296875 -7.234375 20.9375 -6.59375 Z",
    transform: "translate(139.92212, 48.558752)",
    transition:
      "stroke-dashoffset 1.1s ease-in-out 3.0s, opacity 0.3s ease-in-out 3.0s, visibility 0s ease-in-out 3.0s",
  },
];

export default function LoaderTextAnimation() {
  const [isAnimating, setIsAnimating] = useState(false);
  const [isCompleted, setIsCompleted] = useState(true); // Start as static
  const timeoutRef = useRef<NodeJS.Timeout | null>(null);

  // Total animation duration (sum of all delays/durations)
  const ANIMATION_DURATION = 4700; // Adjust if needed for all paths

  // On hover, animate signature in sequence
  const handleMouseEnter = () => {
    setIsAnimating(true);
    setIsCompleted(false);
    if (timeoutRef.current) clearTimeout(timeoutRef.current);
    timeoutRef.current = setTimeout(() => {
      setIsAnimating(false);
      setIsCompleted(true);
    }, ANIMATION_DURATION);
  };
  // On mouse leave, do nothing
  const handleMouseLeave = () => {};

  return (
    <div
      className="flex items-center justify-center h-full w-full pointer-events-auto cursor-pointer"
      style={{ letterSpacing: 2 }}
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
    >
      <svg
        width="100%"
        height="100%"
        viewBox="0 0 300 75"
        className="block mx-auto"
        style={{ maxHeight: 80, maxWidth: 320, display: "block" }}
        preserveAspectRatio="xMidYMid meet"
      >
        {signaturePaths.map((path, idx) => (
          <path
            key={idx}
            d={path.d}
            transform={path.transform}
            stroke="white"
            strokeWidth="0.8"
            strokeLinecap="butt"
            strokeLinejoin="round"
            fill="transparent"
            pathLength="1"
            style={{
              strokeDasharray: "1",
              strokeDashoffset: isAnimating ? "0" : isCompleted ? "0" : "1",
              opacity: isAnimating ? 1 : isCompleted ? 1 : 0,
              visibility: isAnimating ? "visible" : isCompleted ? "visible" : "hidden",
              transition: path.transition,
            }}
          />
        ))}
      </svg>
    </div>
  );
}
